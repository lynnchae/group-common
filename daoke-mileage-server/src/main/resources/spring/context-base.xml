<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>


    <!-- 激活利用注解进行装配 -->
    <context:annotation-config/>
    <context:component-scan base-package="me.daoke.mileage"/>


    <!-- 定义受环境影响易变的变量 -->
    <bean
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound"   value="true"/>
        <property name="locations">
            <list>
                <value>classpath*:config/jdbc.properties</value>
                <value>classpath*:config/common.properties</value>
            </list>
        </property>
    </bean>

    <!--公共配置属性 -->
    <bean id="commonPoolInfo" class="org.apache.tomcat.jdbc.pool.DataSource"
          destroy-method="close">
        <property name="jmxEnabled" value="${Tomcat.jdbc.pool.jmxEnabled}"></property>
        <property name="testWhileIdle" value="${Tomcat.jdbc.pool.testWhileIdle}"></property>
        <property name="testOnBorrow" value="${Tomcat.jdbc.pool.testOnBorrow}"></property>
        <property name="validationQuery"
                  value="${Tomcat.jdbc.pool.validationQuery.sqlserverOrmysql}"></property>
        <property name="testOnReturn" value="${Tomcat.jdbc.pool.testOnReturn}"></property>
        <property name="validationInterval" value="${Tomcat.jdbc.pool.validationInterval}"></property>
        <property name ="timeBetweenEvictionRunsMillis"
                  value="${Tomcat.jdbc.pool.timeBetweenEvictionRunsMillis}"></property>
        <property name="maxActive" value="${Tomcat.jdbc.pool.maxActive}"></property>
        <property name="initialSize" value="${Tomcat.jdbc.pool.initialSize}"></property>
        <property name="maxWait" value="${Tomcat.jdbc.pool.maxWait}"></property>
        <property name="removeAbandoned" value="${Tomcat.jdbc.pool.removeAbandoned}"></property>
        <property name="removeAbandonedTimeout" value="${Tomcat.jdbc.pool.removeAbandonedTimeout}"></property>
        <property name="logAbandoned" value="${Tomcat.jdbc.pool.logAbandoned}"></property>
        <property name="minEvictableIdleTimeMillis"
                  value="${Tomcat.jdbc.pool.minEvictableIdleTimeMillis}"></property>
        <property name="jdbcInterceptors" value="${Tomcat.jdbc.pool.jdbcInterceptors}"></property>
    </bean>

    <!-- 将DataSource的数据源 做为默认数据源 -->
    <bean id="dataSource" parent="commonPoolInfo">
        <property name="driverClassName" value="${JDBC.Driver.dataCenter}" />
        <property name="url" value="${JDBC.ConnectionURL.dataCenter}" />
        <property name="username" value="${JDBC.Username.dataCenter}" />
        <property name="password" value="${JDBC.Password.dataCenter}" />
    </bean>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="mapperLocations" value="classpath*:/mybatis/mileage-mapper.xml"/>-->
        <!--<property name="dataSource" ref="dataSource"/>-->
    <!--</bean>-->

    <!-- 声明式事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 配置motorcade事务驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <!-- jedis pool配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${redis.maxActive}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWait" value="${redis.maxWait}" />
        <!--
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        -->
    </bean>

    <!-- spring data redis -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"></property>
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <!--<property name="password" value="${redis.pass}" />-->
        <property name="timeout" value="${redis.timeout}" />
        <!--<property name="database" value="${redis.default.db}"></property>-->
        <constructor-arg index="0" ref="jedisPoolConfig" />
    </bean>



    <!-- Redis Template -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
    </bean>




</beans>