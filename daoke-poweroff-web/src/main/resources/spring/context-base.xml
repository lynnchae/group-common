<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
					    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
					    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd 
					    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
					    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">


	<description>Spring公共配置</description>

	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<!-- 其它基础配置 -->
				<value>classpath*:config/common.properties</value>
			</list>
		</property>
	</bean>

	<!-- 激活利用注解进行装配 -->
	<context:component-scan base-package="me.daoke.poweroff">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!--公共配置属性 -->
	<!--<bean id="commonPoolInfo" class="org.apache.tomcat.jdbc.pool.DataSource"-->
		<!--destroy-method="close">-->
		<!--<property name="jmxEnabled" value="${Tomcat.jdbc.pool.jmxEnabled}"></property>-->
		<!--<property name="testWhileIdle" value="${Tomcat.jdbc.pool.testWhileIdle}"></property>-->
		<!--<property name="testOnBorrow" value="${Tomcat.jdbc.pool.testOnBorrow}"></property>-->
		<!--<property name="validationQuery"-->
			<!--value="${Tomcat.jdbc.pool.validationQuery.sqlserverOrmysql}"></property>-->
		<!--<property name="testOnReturn" value="${Tomcat.jdbc.pool.testOnReturn}"></property>-->
		<!--<property name="validationInterval" value="${Tomcat.jdbc.pool.validationInterval}"></property>-->
		<!--<property name ="timeBetweenEvictionRunsMillis"-->
			<!--value="${Tomcat.jdbc.pool.timeBetweenEvictionRunsMillis}"></property>-->
		<!--<property name="maxActive" value="${Tomcat.jdbc.pool.maxActive}"></property>-->
		<!--<property name="initialSize" value="${Tomcat.jdbc.pool.initialSize}"></property>-->
		<!--<property name="maxWait" value="${Tomcat.jdbc.pool.maxWait}"></property>-->
		<!--<property name="removeAbandoned" value="${Tomcat.jdbc.pool.removeAbandoned}"></property>-->
		<!--<property name="removeAbandonedTimeout" value="${Tomcat.jdbc.pool.removeAbandonedTimeout}"></property>-->
		<!--<property name="logAbandoned" value="${Tomcat.jdbc.pool.logAbandoned}"></property>-->
		<!--<property name="minEvictableIdleTimeMillis"-->
			<!--value="${Tomcat.jdbc.pool.minEvictableIdleTimeMillis}"></property>-->
		<!--<property name="jdbcInterceptors" value="${Tomcat.jdbc.pool.jdbcInterceptors}"></property>-->
	<!--</bean>-->


	<!-- 将DataSource的数据源 做为默认数据源 -->
	<!--<bean id="dataSource" parent="commonPoolInfo">-->
		<!--<property name="driverClassName" value="${JDBC.Driver.App_deliverhelp}" />-->
		<!--<property name="url" value="${JDBC.ConnectionURL.App_deliverhelp}" />-->
		<!--<property name="username" value="${JDBC.Username.App_deliverhelp}" />-->
		<!--<property name="password" value="${JDBC.Password.App_deliverhelp}" />-->
	<!--</bean>-->

	<!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->

	<!-- mybatis -->
	<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:sqlmap/sqlmap-fmcg-service-config.xml" />
		<property name="mapperLocations"> <list> <value>classpath*:sqlmap/user/user.xml</value>
			</list> </property>
	</bean> -->

	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property
		name="basePackage" value="com.ddmap.mobileserver.*.dao" /> </bean> -->

	<!-- 配置事务数据源 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref ="dataSource"></property> </bean> 使用annotation定义事务
		<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"
		/> -->
	<!-- 声明式事务 -->
	<!--<bean id="transactionManager"-->
		<!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource" />-->
	<!--</bean>-->

    <bean id ="mqConfig" class="me.daoke.common.mq.util.MQConfig">
        <property name="host1" value="${poweroff_host1}"/>
        <property name="port1" value="${poweroff_port1}"/>
        <property name="host2" value="${poweroff_host2}"/>
        <property name="port2" value="${poweroff_port2}"/>
        <property name="userName" value="${poweroff_username}"/>
        <property name="passWord" value="${poweroff_password}"/>
        <property name="exchangeName" value="${poweroff_exchange}"/>
        <property name="virtuaHost" value="${poweroff_virtuaHost}"/>
        <property name="queueName" value="${poweroff_queue}"/>
    </bean>
     <!--开关机-->
    <bean id ="emitDirect" class ="me.daoke.common.mq.client.EmitDirect">
        <constructor-arg ref="mqConfig"/>
    </bean>

    <!--gps数据-->
    <bean id ="mqConfigGpsData" class="me.daoke.common.mq.util.MQConfig">
        <property name="host1" value="${gpsData_host1}"/>
        <property name="port1" value="${gpsData_port1}"/>
        <property name="host2" value="${gpsData_host2}"/>
        <property name="port2" value="${gpsData_port2}"/>
        <property name="userName" value="${gpsData_username}"/>
        <property name="passWord" value="${gpsData_password}"/>
        <property name="exchangeName" value="${gpsData_exchange}"/>
        <property name="virtuaHost" value="${gpsData_virtuaHost}"/>
        <property name="queueName" value="${gpsData_queue}"/>
    </bean>

    <bean id ="emitDirectGpsData" class ="me.daoke.common.mq.client.EmitDirect">
        <constructor-arg ref="mqConfigGpsData"/>
    </bean>


</beans>
